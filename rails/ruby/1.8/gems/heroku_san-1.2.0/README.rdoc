= Heroku San

Helpful rake tasks for Heroku.

== Install

=== Rails 3

Add this to your Gemfile:

  group :development do
    gem 'heroku_san'
  end

=== Rails 2

To install add the following to config/environment.rb:

  config.gem 'heroku_san'

Rake tasks are not automatically loaded from gems, so youâ€™ll need to add the following to your Rakefile:

  begin
    require 'heroku_san/tasks'
  rescue LoadError
    STDERR.puts "Run `rake gems:install` to install heroku_san"
  end

== Configure

In config/heroku.yml you will need add the Heroku apps that you would like to attach to this project. You can generate this file and edit it by running:
  
  rake heroku:create_config

If this is a fresh project, heroku_san can create all the applications for
you, and set the RACK_ENV.

  rake all heroku:create heroku:rack_env

== Usage

After configuring your Heroku apps you can use rake tasks to control the
apps.

  rake production deploy

A rake task with the shorthand name of each app is now available and adds that
server to the list that subsequent commands will execute on. Because this list
is additive, you can easily select which servers to run a command on.

  rake demo staging restart

A special rake task 'all' is created that causes any further commands to
execute on all heroku apps.

Manipulate collaborators on all this project's apps (prompts for email
address):

  rake all heroku:share
  rake all heroku:unshare

Need to add remotes for each app?

  rake all heroku:remotes

A full list of tasks provided:

  rake all                   # Select all Heroku apps for later command
  rake console               # Opens a remote console
  rake deploy[commit]        # Pushes the given commit, migrates and restarts (default: HEAD)
  rake deploy:force[commit]  # Force-pushes the given commit, migrates and restarts (default: HEAD)
  rake after_deploy          # Callback after deploys
  rake before_deploy         # Callback before deploys
  rake capture               # Captures a bundle on Heroku
  rake heroku:apps           # Lists configured apps
  rake heroku:create         # Creates the Heroku app
  rake heroku:create_config  # Creates an example configuration file
  rake heroku:gems           # Generate the Heroku gems manifest from gem dependencies
  rake heroku:maintenance    # Enable maintenance mode
  rake heroku:maintenance_off# Disable maintenance mode
  rake heroku:push           # Pushes the given commit (default: HEAD)
  rake heroku:push:force     # Force-pushes the given commit (default: HEAD)
  rake heroku:remotes        # Add git remotes for all apps in this project
  rake heroku:rack_env       # Add proper RACK_ENV to each application
  rake heroku:rake[task]     # Runs a rake task remotely
  rake heroku:share          # Adds a collaborator
  rake heroku:unshare        # Removes a collaborator
  rake logs                  # Shows the Heroku logs
  rake migrate               # Migrates and restarts remote servers
  rake restart               # Restarts remote servers

Frequently used tasks are not namespaced, everything else lives under heroku.

== Links

Homepage:: http://github.com/fastestforward/heroku_san
Issue Tracker:: http://github.com/fastestforward/heroku_san/issues

== Contributors

* Elijah Miller (elijah.miller@gmail.com)
* Glenn Roberts (glenn.roberts@siyelo.com)
* Damien Mathieu (42@dmathieu.com)
* Matthew Hassfurder (matthew.hassfurder@gmail.com)
* Peter Jaros
* Lee Semel
* Michael Haddad (michael@ludditetechnology.com)
* Les Hill (leshill@gmail.com)
* Bryan Ash

== License

License:: Copyright (c) 2009 Elijah Miller <mailto:elijah.miller@gmail.com>, released under the MIT license.
